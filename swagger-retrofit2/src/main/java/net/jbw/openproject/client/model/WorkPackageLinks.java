/*
 * OpenProject API v3
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.jbw.openproject.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import net.jbw.openproject.client.model.Link;
/**
 * WorkPackageLinks
 */


public class WorkPackageLinks {
  @SerializedName("self")
  private Link self = null;

  @SerializedName("update")
  private Link update = null;

  @SerializedName("schema")
  private Link schema = null;

  @SerializedName("updateImmediately")
  private Link updateImmediately = null;

  @SerializedName("logTime")
  private Link logTime = null;

  @SerializedName("move")
  private Link move = null;

  @SerializedName("copy")
  private Link copy = null;

  @SerializedName("pdf")
  private Link pdf = null;

  @SerializedName("atom")
  private Link atom = null;

  @SerializedName("available_relation_candidates")
  private Link availableRelationCandidates = null;

  @SerializedName("activities")
  private Link activities = null;

  @SerializedName("attachments")
  private Link attachments = null;

  @SerializedName("addAttachment")
  private Link addAttachment = null;

  @SerializedName("availableWatchers")
  private Link availableWatchers = null;

  @SerializedName("relations")
  private Link relations = null;

  @SerializedName("revisions")
  private Link revisions = null;

  @SerializedName("watch")
  private Link watch = null;

  @SerializedName("watchers")
  private Link watchers = null;

  @SerializedName("addWatcher")
  private Link addWatcher = null;

  @SerializedName("removeWatcher")
  private Link removeWatcher = null;

  @SerializedName("addRelation")
  private Link addRelation = null;

  @SerializedName("addChild")
  private Link addChild = null;

  @SerializedName("changeParent")
  private Link changeParent = null;

  @SerializedName("addComment")
  private Link addComment = null;

  @SerializedName("previewMarkup")
  private Link previewMarkup = null;

  @SerializedName("timeEntries")
  private Link timeEntries = null;

  @SerializedName("ancestors")
  private List<Link> ancestors = null;

  @SerializedName("category")
  private Link category = null;

  @SerializedName("type")
  private Link type = null;

  @SerializedName("priority")
  private Link priority = null;

  @SerializedName("project")
  private Link project = null;

  @SerializedName("status")
  private Link status = null;

  @SerializedName("author")
  private Link author = null;

  @SerializedName("responsible")
  private Link responsible = null;

  @SerializedName("assignee")
  private Link assignee = null;

  @SerializedName("version")
  private Link version = null;

  @SerializedName("parent")
  private Link parent = null;

  @SerializedName("logCosts")
  private Link logCosts = null;

  @SerializedName("showCosts")
  private Link showCosts = null;

  @SerializedName("costObject")
  private Link costObject = null;

  @SerializedName("costsByType")
  private Link costsByType = null;

  public WorkPackageLinks self(Link self) {
    this.self = self;
    return this;
  }

   /**
   * Get self
   * @return self
  **/
  @Schema(description = "")
  public Link getSelf() {
    return self;
  }

  public void setSelf(Link self) {
    this.self = self;
  }

  public WorkPackageLinks update(Link update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public Link getUpdate() {
    return update;
  }

  public void setUpdate(Link update) {
    this.update = update;
  }

  public WorkPackageLinks schema(Link schema) {
    this.schema = schema;
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @Schema(description = "")
  public Link getSchema() {
    return schema;
  }

  public void setSchema(Link schema) {
    this.schema = schema;
  }

  public WorkPackageLinks updateImmediately(Link updateImmediately) {
    this.updateImmediately = updateImmediately;
    return this;
  }

   /**
   * Get updateImmediately
   * @return updateImmediately
  **/
  @Schema(description = "")
  public Link getUpdateImmediately() {
    return updateImmediately;
  }

  public void setUpdateImmediately(Link updateImmediately) {
    this.updateImmediately = updateImmediately;
  }

  public WorkPackageLinks logTime(Link logTime) {
    this.logTime = logTime;
    return this;
  }

   /**
   * Get logTime
   * @return logTime
  **/
  @Schema(description = "")
  public Link getLogTime() {
    return logTime;
  }

  public void setLogTime(Link logTime) {
    this.logTime = logTime;
  }

  public WorkPackageLinks move(Link move) {
    this.move = move;
    return this;
  }

   /**
   * Get move
   * @return move
  **/
  @Schema(description = "")
  public Link getMove() {
    return move;
  }

  public void setMove(Link move) {
    this.move = move;
  }

  public WorkPackageLinks copy(Link copy) {
    this.copy = copy;
    return this;
  }

   /**
   * Get copy
   * @return copy
  **/
  @Schema(description = "")
  public Link getCopy() {
    return copy;
  }

  public void setCopy(Link copy) {
    this.copy = copy;
  }

  public WorkPackageLinks pdf(Link pdf) {
    this.pdf = pdf;
    return this;
  }

   /**
   * Get pdf
   * @return pdf
  **/
  @Schema(description = "")
  public Link getPdf() {
    return pdf;
  }

  public void setPdf(Link pdf) {
    this.pdf = pdf;
  }

  public WorkPackageLinks atom(Link atom) {
    this.atom = atom;
    return this;
  }

   /**
   * Get atom
   * @return atom
  **/
  @Schema(description = "")
  public Link getAtom() {
    return atom;
  }

  public void setAtom(Link atom) {
    this.atom = atom;
  }

  public WorkPackageLinks availableRelationCandidates(Link availableRelationCandidates) {
    this.availableRelationCandidates = availableRelationCandidates;
    return this;
  }

   /**
   * Get availableRelationCandidates
   * @return availableRelationCandidates
  **/
  @Schema(description = "")
  public Link getAvailableRelationCandidates() {
    return availableRelationCandidates;
  }

  public void setAvailableRelationCandidates(Link availableRelationCandidates) {
    this.availableRelationCandidates = availableRelationCandidates;
  }

  public WorkPackageLinks activities(Link activities) {
    this.activities = activities;
    return this;
  }

   /**
   * Get activities
   * @return activities
  **/
  @Schema(description = "")
  public Link getActivities() {
    return activities;
  }

  public void setActivities(Link activities) {
    this.activities = activities;
  }

  public WorkPackageLinks attachments(Link attachments) {
    this.attachments = attachments;
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @Schema(description = "")
  public Link getAttachments() {
    return attachments;
  }

  public void setAttachments(Link attachments) {
    this.attachments = attachments;
  }

  public WorkPackageLinks addAttachment(Link addAttachment) {
    this.addAttachment = addAttachment;
    return this;
  }

   /**
   * Get addAttachment
   * @return addAttachment
  **/
  @Schema(description = "")
  public Link getAddAttachment() {
    return addAttachment;
  }

  public void setAddAttachment(Link addAttachment) {
    this.addAttachment = addAttachment;
  }

  public WorkPackageLinks availableWatchers(Link availableWatchers) {
    this.availableWatchers = availableWatchers;
    return this;
  }

   /**
   * Get availableWatchers
   * @return availableWatchers
  **/
  @Schema(description = "")
  public Link getAvailableWatchers() {
    return availableWatchers;
  }

  public void setAvailableWatchers(Link availableWatchers) {
    this.availableWatchers = availableWatchers;
  }

  public WorkPackageLinks relations(Link relations) {
    this.relations = relations;
    return this;
  }

   /**
   * Get relations
   * @return relations
  **/
  @Schema(description = "")
  public Link getRelations() {
    return relations;
  }

  public void setRelations(Link relations) {
    this.relations = relations;
  }

  public WorkPackageLinks revisions(Link revisions) {
    this.revisions = revisions;
    return this;
  }

   /**
   * Get revisions
   * @return revisions
  **/
  @Schema(description = "")
  public Link getRevisions() {
    return revisions;
  }

  public void setRevisions(Link revisions) {
    this.revisions = revisions;
  }

  public WorkPackageLinks watch(Link watch) {
    this.watch = watch;
    return this;
  }

   /**
   * Get watch
   * @return watch
  **/
  @Schema(description = "")
  public Link getWatch() {
    return watch;
  }

  public void setWatch(Link watch) {
    this.watch = watch;
  }

  public WorkPackageLinks watchers(Link watchers) {
    this.watchers = watchers;
    return this;
  }

   /**
   * Get watchers
   * @return watchers
  **/
  @Schema(description = "")
  public Link getWatchers() {
    return watchers;
  }

  public void setWatchers(Link watchers) {
    this.watchers = watchers;
  }

  public WorkPackageLinks addWatcher(Link addWatcher) {
    this.addWatcher = addWatcher;
    return this;
  }

   /**
   * Get addWatcher
   * @return addWatcher
  **/
  @Schema(description = "")
  public Link getAddWatcher() {
    return addWatcher;
  }

  public void setAddWatcher(Link addWatcher) {
    this.addWatcher = addWatcher;
  }

  public WorkPackageLinks removeWatcher(Link removeWatcher) {
    this.removeWatcher = removeWatcher;
    return this;
  }

   /**
   * Get removeWatcher
   * @return removeWatcher
  **/
  @Schema(description = "")
  public Link getRemoveWatcher() {
    return removeWatcher;
  }

  public void setRemoveWatcher(Link removeWatcher) {
    this.removeWatcher = removeWatcher;
  }

  public WorkPackageLinks addRelation(Link addRelation) {
    this.addRelation = addRelation;
    return this;
  }

   /**
   * Get addRelation
   * @return addRelation
  **/
  @Schema(description = "")
  public Link getAddRelation() {
    return addRelation;
  }

  public void setAddRelation(Link addRelation) {
    this.addRelation = addRelation;
  }

  public WorkPackageLinks addChild(Link addChild) {
    this.addChild = addChild;
    return this;
  }

   /**
   * Get addChild
   * @return addChild
  **/
  @Schema(description = "")
  public Link getAddChild() {
    return addChild;
  }

  public void setAddChild(Link addChild) {
    this.addChild = addChild;
  }

  public WorkPackageLinks changeParent(Link changeParent) {
    this.changeParent = changeParent;
    return this;
  }

   /**
   * Get changeParent
   * @return changeParent
  **/
  @Schema(description = "")
  public Link getChangeParent() {
    return changeParent;
  }

  public void setChangeParent(Link changeParent) {
    this.changeParent = changeParent;
  }

  public WorkPackageLinks addComment(Link addComment) {
    this.addComment = addComment;
    return this;
  }

   /**
   * Get addComment
   * @return addComment
  **/
  @Schema(description = "")
  public Link getAddComment() {
    return addComment;
  }

  public void setAddComment(Link addComment) {
    this.addComment = addComment;
  }

  public WorkPackageLinks previewMarkup(Link previewMarkup) {
    this.previewMarkup = previewMarkup;
    return this;
  }

   /**
   * Get previewMarkup
   * @return previewMarkup
  **/
  @Schema(description = "")
  public Link getPreviewMarkup() {
    return previewMarkup;
  }

  public void setPreviewMarkup(Link previewMarkup) {
    this.previewMarkup = previewMarkup;
  }

  public WorkPackageLinks timeEntries(Link timeEntries) {
    this.timeEntries = timeEntries;
    return this;
  }

   /**
   * Get timeEntries
   * @return timeEntries
  **/
  @Schema(description = "")
  public Link getTimeEntries() {
    return timeEntries;
  }

  public void setTimeEntries(Link timeEntries) {
    this.timeEntries = timeEntries;
  }

  public WorkPackageLinks ancestors(List<Link> ancestors) {
    this.ancestors = ancestors;
    return this;
  }

  public WorkPackageLinks addAncestorsItem(Link ancestorsItem) {
    if (this.ancestors == null) {
      this.ancestors = new ArrayList<>();
    }
    this.ancestors.add(ancestorsItem);
    return this;
  }

   /**
   * Get ancestors
   * @return ancestors
  **/
  @Schema(description = "")
  public List<Link> getAncestors() {
    return ancestors;
  }

  public void setAncestors(List<Link> ancestors) {
    this.ancestors = ancestors;
  }

  public WorkPackageLinks category(Link category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public Link getCategory() {
    return category;
  }

  public void setCategory(Link category) {
    this.category = category;
  }

  public WorkPackageLinks type(Link type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public Link getType() {
    return type;
  }

  public void setType(Link type) {
    this.type = type;
  }

  public WorkPackageLinks priority(Link priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public Link getPriority() {
    return priority;
  }

  public void setPriority(Link priority) {
    this.priority = priority;
  }

  public WorkPackageLinks project(Link project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @Schema(description = "")
  public Link getProject() {
    return project;
  }

  public void setProject(Link project) {
    this.project = project;
  }

  public WorkPackageLinks status(Link status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Link getStatus() {
    return status;
  }

  public void setStatus(Link status) {
    this.status = status;
  }

  public WorkPackageLinks author(Link author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @Schema(description = "")
  public Link getAuthor() {
    return author;
  }

  public void setAuthor(Link author) {
    this.author = author;
  }

  public WorkPackageLinks responsible(Link responsible) {
    this.responsible = responsible;
    return this;
  }

   /**
   * Get responsible
   * @return responsible
  **/
  @Schema(description = "")
  public Link getResponsible() {
    return responsible;
  }

  public void setResponsible(Link responsible) {
    this.responsible = responsible;
  }

  public WorkPackageLinks assignee(Link assignee) {
    this.assignee = assignee;
    return this;
  }

   /**
   * Get assignee
   * @return assignee
  **/
  @Schema(description = "")
  public Link getAssignee() {
    return assignee;
  }

  public void setAssignee(Link assignee) {
    this.assignee = assignee;
  }

  public WorkPackageLinks version(Link version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Link getVersion() {
    return version;
  }

  public void setVersion(Link version) {
    this.version = version;
  }

  public WorkPackageLinks parent(Link parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @Schema(description = "")
  public Link getParent() {
    return parent;
  }

  public void setParent(Link parent) {
    this.parent = parent;
  }

  public WorkPackageLinks logCosts(Link logCosts) {
    this.logCosts = logCosts;
    return this;
  }

   /**
   * Get logCosts
   * @return logCosts
  **/
  @Schema(description = "")
  public Link getLogCosts() {
    return logCosts;
  }

  public void setLogCosts(Link logCosts) {
    this.logCosts = logCosts;
  }

  public WorkPackageLinks showCosts(Link showCosts) {
    this.showCosts = showCosts;
    return this;
  }

   /**
   * Get showCosts
   * @return showCosts
  **/
  @Schema(description = "")
  public Link getShowCosts() {
    return showCosts;
  }

  public void setShowCosts(Link showCosts) {
    this.showCosts = showCosts;
  }

  public WorkPackageLinks costObject(Link costObject) {
    this.costObject = costObject;
    return this;
  }

   /**
   * Get costObject
   * @return costObject
  **/
  @Schema(description = "")
  public Link getCostObject() {
    return costObject;
  }

  public void setCostObject(Link costObject) {
    this.costObject = costObject;
  }

  public WorkPackageLinks costsByType(Link costsByType) {
    this.costsByType = costsByType;
    return this;
  }

   /**
   * Get costsByType
   * @return costsByType
  **/
  @Schema(description = "")
  public Link getCostsByType() {
    return costsByType;
  }

  public void setCostsByType(Link costsByType) {
    this.costsByType = costsByType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkPackageLinks workPackageLinks = (WorkPackageLinks) o;
    return Objects.equals(this.self, workPackageLinks.self) &&
        Objects.equals(this.update, workPackageLinks.update) &&
        Objects.equals(this.schema, workPackageLinks.schema) &&
        Objects.equals(this.updateImmediately, workPackageLinks.updateImmediately) &&
        Objects.equals(this.logTime, workPackageLinks.logTime) &&
        Objects.equals(this.move, workPackageLinks.move) &&
        Objects.equals(this.copy, workPackageLinks.copy) &&
        Objects.equals(this.pdf, workPackageLinks.pdf) &&
        Objects.equals(this.atom, workPackageLinks.atom) &&
        Objects.equals(this.availableRelationCandidates, workPackageLinks.availableRelationCandidates) &&
        Objects.equals(this.activities, workPackageLinks.activities) &&
        Objects.equals(this.attachments, workPackageLinks.attachments) &&
        Objects.equals(this.addAttachment, workPackageLinks.addAttachment) &&
        Objects.equals(this.availableWatchers, workPackageLinks.availableWatchers) &&
        Objects.equals(this.relations, workPackageLinks.relations) &&
        Objects.equals(this.revisions, workPackageLinks.revisions) &&
        Objects.equals(this.watch, workPackageLinks.watch) &&
        Objects.equals(this.watchers, workPackageLinks.watchers) &&
        Objects.equals(this.addWatcher, workPackageLinks.addWatcher) &&
        Objects.equals(this.removeWatcher, workPackageLinks.removeWatcher) &&
        Objects.equals(this.addRelation, workPackageLinks.addRelation) &&
        Objects.equals(this.addChild, workPackageLinks.addChild) &&
        Objects.equals(this.changeParent, workPackageLinks.changeParent) &&
        Objects.equals(this.addComment, workPackageLinks.addComment) &&
        Objects.equals(this.previewMarkup, workPackageLinks.previewMarkup) &&
        Objects.equals(this.timeEntries, workPackageLinks.timeEntries) &&
        Objects.equals(this.ancestors, workPackageLinks.ancestors) &&
        Objects.equals(this.category, workPackageLinks.category) &&
        Objects.equals(this.type, workPackageLinks.type) &&
        Objects.equals(this.priority, workPackageLinks.priority) &&
        Objects.equals(this.project, workPackageLinks.project) &&
        Objects.equals(this.status, workPackageLinks.status) &&
        Objects.equals(this.author, workPackageLinks.author) &&
        Objects.equals(this.responsible, workPackageLinks.responsible) &&
        Objects.equals(this.assignee, workPackageLinks.assignee) &&
        Objects.equals(this.version, workPackageLinks.version) &&
        Objects.equals(this.parent, workPackageLinks.parent) &&
        Objects.equals(this.logCosts, workPackageLinks.logCosts) &&
        Objects.equals(this.showCosts, workPackageLinks.showCosts) &&
        Objects.equals(this.costObject, workPackageLinks.costObject) &&
        Objects.equals(this.costsByType, workPackageLinks.costsByType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, update, schema, updateImmediately, logTime, move, copy, pdf, atom, availableRelationCandidates, activities, attachments, addAttachment, availableWatchers, relations, revisions, watch, watchers, addWatcher, removeWatcher, addRelation, addChild, changeParent, addComment, previewMarkup, timeEntries, ancestors, category, type, priority, project, status, author, responsible, assignee, version, parent, logCosts, showCosts, costObject, costsByType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkPackageLinks {\n");
    
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    updateImmediately: ").append(toIndentedString(updateImmediately)).append("\n");
    sb.append("    logTime: ").append(toIndentedString(logTime)).append("\n");
    sb.append("    move: ").append(toIndentedString(move)).append("\n");
    sb.append("    copy: ").append(toIndentedString(copy)).append("\n");
    sb.append("    pdf: ").append(toIndentedString(pdf)).append("\n");
    sb.append("    atom: ").append(toIndentedString(atom)).append("\n");
    sb.append("    availableRelationCandidates: ").append(toIndentedString(availableRelationCandidates)).append("\n");
    sb.append("    activities: ").append(toIndentedString(activities)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    addAttachment: ").append(toIndentedString(addAttachment)).append("\n");
    sb.append("    availableWatchers: ").append(toIndentedString(availableWatchers)).append("\n");
    sb.append("    relations: ").append(toIndentedString(relations)).append("\n");
    sb.append("    revisions: ").append(toIndentedString(revisions)).append("\n");
    sb.append("    watch: ").append(toIndentedString(watch)).append("\n");
    sb.append("    watchers: ").append(toIndentedString(watchers)).append("\n");
    sb.append("    addWatcher: ").append(toIndentedString(addWatcher)).append("\n");
    sb.append("    removeWatcher: ").append(toIndentedString(removeWatcher)).append("\n");
    sb.append("    addRelation: ").append(toIndentedString(addRelation)).append("\n");
    sb.append("    addChild: ").append(toIndentedString(addChild)).append("\n");
    sb.append("    changeParent: ").append(toIndentedString(changeParent)).append("\n");
    sb.append("    addComment: ").append(toIndentedString(addComment)).append("\n");
    sb.append("    previewMarkup: ").append(toIndentedString(previewMarkup)).append("\n");
    sb.append("    timeEntries: ").append(toIndentedString(timeEntries)).append("\n");
    sb.append("    ancestors: ").append(toIndentedString(ancestors)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    responsible: ").append(toIndentedString(responsible)).append("\n");
    sb.append("    assignee: ").append(toIndentedString(assignee)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    logCosts: ").append(toIndentedString(logCosts)).append("\n");
    sb.append("    showCosts: ").append(toIndentedString(showCosts)).append("\n");
    sb.append("    costObject: ").append(toIndentedString(costObject)).append("\n");
    sb.append("    costsByType: ").append(toIndentedString(costsByType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
