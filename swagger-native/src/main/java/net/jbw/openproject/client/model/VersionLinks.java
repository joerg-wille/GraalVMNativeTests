/*
 * OpenProject API v3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.jbw.openproject.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import net.jbw.openproject.client.model.Link;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * VersionLinks
 */
@JsonPropertyOrder({
  VersionLinks.JSON_PROPERTY_SELF,
  VersionLinks.JSON_PROPERTY_DEFINING_PROJECT,
  VersionLinks.JSON_PROPERTY_AVAILABLE_IN_PROJECTS
})

public class VersionLinks {
  public static final String JSON_PROPERTY_SELF = "self";
  private Link self;

  public static final String JSON_PROPERTY_DEFINING_PROJECT = "definingProject";
  private Link definingProject;

  public static final String JSON_PROPERTY_AVAILABLE_IN_PROJECTS = "availableInProjects";
  private Link availableInProjects;


  public VersionLinks self(Link self) {
    
    this.self = self;
    return this;
  }

   /**
   * Get self
   * @return self
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Link getSelf() {
    return self;
  }


  public void setSelf(Link self) {
    this.self = self;
  }


  public VersionLinks definingProject(Link definingProject) {
    
    this.definingProject = definingProject;
    return this;
  }

   /**
   * Get definingProject
   * @return definingProject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEFINING_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Link getDefiningProject() {
    return definingProject;
  }


  public void setDefiningProject(Link definingProject) {
    this.definingProject = definingProject;
  }


  public VersionLinks availableInProjects(Link availableInProjects) {
    
    this.availableInProjects = availableInProjects;
    return this;
  }

   /**
   * Get availableInProjects
   * @return availableInProjects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_IN_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Link getAvailableInProjects() {
    return availableInProjects;
  }


  public void setAvailableInProjects(Link availableInProjects) {
    this.availableInProjects = availableInProjects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionLinks versionLinks = (VersionLinks) o;
    return Objects.equals(this.self, versionLinks.self) &&
        Objects.equals(this.definingProject, versionLinks.definingProject) &&
        Objects.equals(this.availableInProjects, versionLinks.availableInProjects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, definingProject, availableInProjects);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionLinks {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    definingProject: ").append(toIndentedString(definingProject)).append("\n");
    sb.append("    availableInProjects: ").append(toIndentedString(availableInProjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

